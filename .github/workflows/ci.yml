name: CI/CD

on:
  push:
    branches:
      - master
    tags:
      - "*"
    paths:
      - "**.py"
      - "poetry.lock"
      - "!mingshe/__version__.py"
  pull_request:
    branches:
      - master
    paths:
      - "**.py"
      - "poetry.lock"
      - "!mingshe/__version__.py"

jobs:
  tests:
    name: "Python ${{ matrix.python-version }} ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        python-version: [3.9]
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry config virtualenvs.create false --local
          poetry install
      - name: Format and type check
        run: |
          python script/check.py
      - name: Test with pytest
        run: |
          pytest -o log_cli=true -o log_cli_level=DEBUG

  publish:
    needs: tests
    if: startsWith(github.ref, 'refs/tags/')

    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry

      - name: Build
        run: |
          poetry build

      - name: Publish
        run: |
          poetry publish --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}
